# Use OpenJDK 21 slim image as the base
FROM openjdk:21-slim

# Set environment variables for Maven
ENV MAVEN_VERSION=3.9.4
ENV MAVEN_HOME=/opt/apache-maven-${MAVEN_VERSION}
ENV PATH=${MAVEN_HOME}/bin:${PATH}

# Install necessary packages: Git, curl, tar, Docker, and other dependencies
RUN apt-get update && \
    apt-get install -y git curl tar ca-certificates gnupg lsb-release && \
    # Download and install Maven
    curl -O https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    tar -xvzf apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /opt/ && \
    rm apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
    ln -s /opt/apache-maven-${MAVEN_VERSION} /opt/maven && \
    # Set up Docker repository and install Docker
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
    apt-get update && \
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin && \
    # Clean up
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    # Safe directory permission for Git
    git config --global --add safe.directory "*"

# Create jenkins user (optional, but recommended for better security)
RUN useradd -m -d /home/jenkins -s /bin/bash jenkins

# Switch to jenkins user
USER jenkins

# Set working directory
WORKDIR /home/jenkins

# Start the Docker daemon when the container starts
CMD ["sh", "-c", "dockerd & while ! docker info > /dev/null 2>&1; do sleep 1; done; exec bash"]
